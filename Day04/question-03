Question 03 : LeetCode 15. 3Sum
Solution : 
class Solution {
    List<List<Integer>> ans=new LinkedList<>();
    public List<List<Integer>> threeSum(int[] nums) {
        
        Arrays.sort(nums);
        
        for(int i=0;i<nums.length;i++){
            
            if(i==0||nums[i-1]!=nums[i]){
                
                twoSumSorted(i+1,nums.length-1,nums,0-nums[i]);
                
            }
            
        }
        return ans;
        
    }
    void twoSumSorted(int i,int j,int []nums,int target){
        
    int a=nums[i-1];
        while(i<j){
            if(nums[i]+nums[j]>target){
                j--;
            }else if(nums[i]+nums[j]<target){
                i++;
            }else{
            List<Integer>list=new LinkedList<>();
                list.add(a);
                list.add(nums[i]);
                list.add(nums[j]);
                ans.add(list);
                
                //remove dublicate b
                while(i<j&&nums[i]==nums[i+1])i++;
                
                //remove dublicate c
                while(i<j&&nums[j]==nums[j-1])j--;
                    
                //for another set
                    i++;
                j--;
            }
        }
        
        
    }
}
